@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-9">

        @using (Html.BeginForm("Index", "Home", FormMethod.Get))
        {
        <fieldset>
            @Html.Label("StartDate", "Start Date:")
            <input class="startdate" id="startdate" name="startdate" type="date" value="">
            @Html.Label("enddate", "End Date:")
            <input class="startdate" id="enddate" name="enddate" type="date" value="">
            <input type="submit" value="Apply" />
            @*<input type="submit" value="By Week" />
            <input type="submit" value="By Month" />
            <input type="submit" value="By Year" />*@
        </fieldset>
        }

    </div>

</div>

<h2>Overview - Total: @ViewData["TotalBugs"]</h2>

<div class="row">
    <div class="col-md-6">
        <h3>Category</h3>
        <canvas id="categoryChart"></canvas>
    </div>
    <div class="col-md-6">
        <h3>Description</h3>
        <div>
            <ul>
                <li>Category: How many bugs completed by category.</li>
                <li>Productivity: How many bugs completed.</li>
                <li>Quality: How many avg PR iterations per PR.</li>
                <li>Efficency: Average hours per bug.</li>
            </ul>
        </div>
    </div>
</div>

<hr />
<div class="row">
    <div class="col-md-4">
        <h3>Productivity</h3>
        <h6>Completed bugs</h6>
        <canvas id="productivityChart"></canvas>
    </div>
    <div class="col-md-4">
        <h3>Quality</h3>
        <h6>Avg. PR iterations per PR</h6>
        <canvas id="qualityChart"></canvas>
    </div>
    <div class="col-md-4">
        <h3>Efficiency</h3>
        <h6>Avg Hours per bug</h6>
        <canvas id="efficencyChart"></canvas>
    </div>
</div>

<hr />
<div class="row">
    <div class="col-md-4">
        <h3>Bug Comments</h3>
        <h6>Avg. bug comments per bug</h6>
        <canvas id="bugCommentsChart"></canvas>
    </div>
    <div class="col-md-4">
        <h3>PR Comments</h3>
        <h6>Avg. PR comments per PR</h6>
        <canvas id="prCommentsChart"></canvas>
    </div>
    <div class="col-md-4">
        <h3>PR Engagement [NOT READY]</h3>
        <h6>Avg. PR response hours</h6>
        <canvas id="prEngagementChart"></canvas>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h3>Tags Chart</h3>
        <h6>Counting tags (>= 20)</h6>
        <canvas id="tagChart"></canvas>
    </div>

    <div class="col-md-12">
        <h3>Severity Chart</h3>
        <h6>Bug severity</h6>
        <canvas id="severityChart"></canvas>
    </div>

    <div class="col-md-12">
        <h3>Priority Chart</h3>
        <h6>Bug Priority</h6>
        <canvas id="priorityChart"></canvas>
    </div>
</div>


@section Scripts {
    <script>

    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    function createOverviewChart() {
        var ctx = document.getElementById('categoryChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'pie',
            data: {
                datasets: [{
                    data: [@ViewData["CategoryValues"]],
                    backgroundColor: [
                        'red',
                        'blue',
                        'green',
                        'black',
                        'grey',
                        'orange',
                        'purple'
                    ],
                    //borderColor: 'green'
                }],

                labels: [@Html.Raw(ViewData["CategoryLabels"])]
            },
            options: {
                legend: {
                    position: 'right'
                },
                plugins: {
                    labels: {
                        render: 'value',
                        fontSize: 20,
                        fontColor: 'white'
                    }
                }
            }
        });
    }

    function createProductivityChart() {
        var ctx = document.getElementById('productivityChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: [@Html.Raw(ViewData["ProductivityLabels"])],
                datasets: [{
                    label: 'Productivity dataset',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: 'green',
                    data: [@ViewData["ProductivityValues"]]
                }]
            },

            options: {
                legend: {
                    display: false,
                    }
            }
        });
    }

    function createQualityChart() {
        var ctx = document.getElementById('qualityChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: [@Html.Raw(ViewData["QualityLabels"])],
                datasets: [{
                    label: 'Quality dataset',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: '' + getRandomColor(),
                    data: [@ViewData["QualityValues"]]
                }]
            },

            options: {
                legend: {
                    display: false,
                }
            }
        });
    }

    function createEfficiencyChart() {
        var ctx = document.getElementById('efficencyChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: [@Html.Raw(ViewData["EfficiencyLabels"])],
                datasets: [{
                    label: 'Efficiency dataset',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: '' + getRandomColor(),
                    data: [@ViewData["EfficiencyValues"]]
                }]
            },

            options: {
            legend: {
                display: false,
                }
            }
        });
    }

    function createBugCommentsChart() {
        var ctx = document.getElementById('bugCommentsChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: [@Html.Raw(ViewData["bugCommentsLabels"])],
                datasets: [{
                    label: 'Bug Comments Dataset',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: '' + getRandomColor(),
                    data: [@ViewData["bugCommentsValues"]]
                }]
            },

            options: {
                legend: {
                    display: false,
                }
            }
        });
    }

    function createPRCommentsChart() {
        var ctx = document.getElementById('prCommentsChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: [@Html.Raw(ViewData["prCommentsLabels"])],
                datasets: [{
                    label: 'PR Comments Dataset',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: '' + getRandomColor(),
                    data: [@ViewData["prCommentsValues"]]
                }]
            },

            options: {
                legend: {
                    display: false,
                }
            }
        });
        }

    function createPREngagementChart() {
        var ctx = document.getElementById('prEngagementChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: [@Html.Raw(ViewData["prEngagementLabels"])],
                datasets: [{
                    label: 'PR Engagement Dataset',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: '' + getRandomColor(),
                    data: [@ViewData["prEngagementValues"]]
                }]
            },
            options: {
                legend: {
                    display: false,
                }
            }
        });
        }

    function createTagChart() {
        var ctx = document.getElementById('tagChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'horizontalBar',

            data: {
                labels: [@Html.Raw(ViewData["TagLabels"])],
                datasets: [{
                    label: 'Tags',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: '' + getRandomColor(),
                    data: [@ViewData["TagValues"]]
                }]
            },
            options: {
                legend: {
                    display: false,
                }
            }
        });
        }

    function createSeverityChart() {
        var ctx = document.getElementById('severityChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'horizontalBar',

            data: {
                labels: [@Html.Raw(ViewData["SeverityLabels"])],
                datasets: [{
                    label: 'Severity',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: '' + getRandomColor(),
                    data: [@ViewData["SeverityValues"]]
                }]
            },
            options: {
                legend: {
                    display: false,
                }
            }
        });

    function createPriorityChart() {
        var ctx = document.getElementById('priorityChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'horizontalBar',

            data: {
                labels: [@Html.Raw(ViewData["PriorityLabels"])],
                datasets: [{
                    label: 'Priority',
                    backgroundColor: '' + getRandomColor(),
                    borderColor: '' + getRandomColor(),
                    data: [@ViewData["PriorityValues"]]
                }]
            },
            options: {
                legend: {
                    display: false,
                }
            }
        });
    }

    createOverviewChart();
    createProductivityChart();
    createEfficiencyChart();
    createQualityChart();
    createBugCommentsChart();
    createPRCommentsChart();
        createPREngagementChart();
        createTagChart();
        createSeverityChart();
        createPriorityChart();


    </script>
}